{"version":3,"sources":["assets/hand.svg","assets/chl-1.png","assets/chl-2.png","assets/chl-3.png","assets/chl-4.png","assets/phone.svg","assets/right-arrow.svg","assets/left-arrow.svg","components/Screen.js","components/Arrow.js","components/Subtitle.js","components/Quote.js","screens.js","components/Master.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Screen","children","className","withRouter","color","textColor","variant","history","onClick","currentIndex","window","location","pathname","split","slice","console","log","push","xmlns","width","height","viewBox","d","transform","style","textAlign","Subtitle","Quote","quoteMarkColor","marginBottom","fontSize","fontWeight","screens","props","alt","src","require","clear","overflow","float","display","margin","verticalAlign","href","setClassName","screenIndex","masterIndex","Master","id","match","params","useState","setProps","body","setBody","useEffect","map","screen","setScreens","App","exact","from","to","path","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c00a3a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.4163ff4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/chl-1.bdea6397.png\";","module.exports = __webpack_public_path__ + \"static/media/chl-2.88b1a713.png\";","module.exports = __webpack_public_path__ + \"static/media/chl-3.624a79f1.png\";","module.exports = __webpack_public_path__ + \"static/media/chl-4.0ef583a2.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.ae6a56bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.95a791ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.292f4051.svg\";","import React from \"react\";\n\nconst Screen = ({children, className = \"\"}) => \n    <div className={\"screen outer \" + className}>\n        <div className=\"screen inner\">{children}</div>\n    </div>\n\nexport default Screen;","import React from \"react\";\n\nimport {withRouter} from \"react-router-dom\";\n\nconst Arrow = ({children, color = \"black\", textColor = \"black\", className, variant, history}) => {\n    const handleNext = () => {\n        const currentIndex = +window.location.pathname.split(\"/\").slice(-1);\n\n        console.log(currentIndex);\n\n        history.push(\"/screen/\" + (currentIndex + 1))\n    }\n\n    return (<div className={\"arrow outer \" + className} variant={variant} onClick={handleNext}>\n        <svg \n            className=\"arrow icon\" \n            xmlns=\"http://www.w3.org/2000/svg\" \n            width=\"45.503\" \n            height=\"63.767\" \n            viewBox=\"0 0 45.503 63.767\">\n            <path d=\"M43.052,38.725a3.249,3.249,0,0,1,4.637,0,3.329,3.329,0,0,1,0,4.637L28.259,62.794a3.361,3.361,0,0,1-4.73,0L4.1,43.362a3.279,3.279,0,0,1,4.637-4.637L22.6,52.638V3.246A3.262,3.262,0,0,1,25.892,0a3.226,3.226,0,0,1,3.246,3.246V52.635Z\" transform=\"translate(-3.126)\" className={color}/>\n        </svg>\n        <p \n            style={{textAlign: \"center\"}}\n            className={\"sans-serif arrow text text-\" + textColor}>\n            {children}\n        </p>\n    </div>)\n}\n\nexport default withRouter(Arrow);","import React from \"react\";\n\nconst Subtitle = ({children, className = \"\"}) => <p className={\"subtitle \" + className}>{children}</p>\n\nexport default Subtitle;","import React from \"react\";\n\nconst Quote = ({quoteMarkColor, textColor, children}) => \n    <>\n        <p \n            className={\"sans-serif text-\" + quoteMarkColor} \n            style={{\n                marginBottom: \"-30px\", \n                fontSize: \"60px\", \n                fontWeight: \"bold\"}}>&ldquo;</p>\n        <blockquote className={\"sans-serif text-\" + textColor}>\n            {children}\n        </blockquote>\n    </>;\n\nexport default Quote;","import React from \"react\";\nimport Screen from \"./components/Screen\";\nimport Arrow from \"./components/Arrow\";\nimport Subtitle from \"./components/Subtitle\";\nimport Quote from \"./components/Quote\";\n\nconst screens = [\n    [{variant: \"dark\"},\n    props => <Screen {...props}>\n        <img \n            width=\"100px\"\n            alt=\"Hand\" \n            src={require(\"./assets/hand.svg\")}/>\n        <h1 className=\"sans-serif text-cream text-center\">Hi, I'm Gil</h1>\n        <Arrow \n            color=\"orange\" \n            textColor=\"cream\">\n            me\n        </Arrow>\n    </Screen>], \n\n    [{variant: \"orange\"},\n    props => <Screen {...props}>\n        <p className=\"large serif text-white\">\n            I&#39;m a <span className=\"text-cream\">website developer</span>,<br/>\n            I work with The Empire and I freelance.\n        </p>\n        <Arrow \n            color=\"dark\" \n            textColor=\"cream\">\n            my work\n        </Arrow>\n    </Screen>],\n\n    [{variant: \"dark\"},\n    props => <Screen {...props}>\n        <p className=\"large serif text-white\">\n            Christian<br/>\n            Heritage<br/>\n            London\n        </p>\n        <Subtitle className=\"text-cream\">Website</Subtitle>\n        <Quote quoteMarkColor=\"orange\" textColor=\"cream\">\n            Christian Heritage London exists to draw attention \n            to the advances of Christianity in [London] and to \n            commend the claims of the Christian gospel.\n        </Quote>\n        <br/>\n        <img\n            alt=\"CHL 1\"\n            src={require(\"./assets/chl-1.png\")}/>\n        <br/>\n        <img\n            alt=\"CHL 2\"\n            src={require(\"./assets/chl-2.png\")}/>\n        <Quote quoteMarkColor=\"orange\" textColor=\"cream\">\n            Some flattering endorsement text here. Website \n            works well. Website works very well. It works \n            very, very well.\n        </Quote>\n        <Subtitle className=\"text-cream text-right\"><small>Peter Greyling, Guide and Trustee, CHL</small></Subtitle>\n        <br/>\n        <img\n            alt=\"CHL 3\"\n            src={require(\"./assets/chl-3.png\")}/>\n        <br/>\n        <img\n            alt=\"CHL 4\"\n            src={require(\"./assets/chl-4.png\")}/>\n        <br/>\n        <Arrow \n            color=\"cream\" \n            textColor=\"cream\">\n            more\n        </Arrow>\n    </Screen>],\n\n    [{variant: \"cream\"},\n    props => <Screen {...props}>\n        <p className=\"large serif text-dark\">\n            Resin<br/>\n            Bonded<br/>\n            Ltd\n        </p>\n        <Subtitle>DBMS</Subtitle>\n        <Quote quoteMarkColor=\"orange\" textColor=\"dark\">\n            Some flattering endorsement text here. System \n            works well. System works very well. It works \n            very, very well.\n        </Quote>\n        <Subtitle className=\"text-right\"><small>Martin Roots, CEO, Resin Bonded Ltd.</small></Subtitle>\n        <Arrow \n            color=\"dark\" \n            textColor=\"dark\">\n            contact\n        </Arrow>\n    </Screen>],\n\n    [{variant: \"dark\"},\n    props => <Screen {...props}>\n        <div style={{clear: \"both\", width: \"100%\", overflow: \"auto\"}}>\n            <img \n                style={{float: \"left\", height: \"200px\"}}\n                alt=\"Phone\"\n                src={require(\"./assets/phone.svg\")}/>\n            <p style={{float: \"left\"}} className=\"large serif text-white\">\n                Let's work<br/>\n                together\n            </p>\n        </div>\n        <br/>\n        <p className=\"sans-serif text-cream text-center\">gil@gilbertvirgo.com</p>\n        <br/><br/><br/>\n        <div style={{textAlign: \"center\"}}>\n            <img \n                style={{height: \"25px\", display: \"inline-block\", margin: \"0\", verticalAlign: \"middle\"}}\n                alt=\"Right Arrow\"\n                src={require(\"./assets/right-arrow.svg\")}/>\n            <p \n                style={{display: \"inline-block\", verticalAlign: \"middle\", margin: \"0 10px\"}}\n                className=\"text-expand sans-serif text-cream text-center\"><b>\n                    <a href=\"http://theempire.netlify.com\">The Empire</a>\n                </b></p>\n            <img \n                style={{height: \"25px\", display: \"inline-block\", margin: \"0\", verticalAlign: \"middle\"}}\n                alt=\"Left Arrow\"\n                src={require(\"./assets/left-arrow.svg\")}/>\n        </div>\n    </Screen>]\n];\n\nexport default screens;","import React, {useEffect, useState} from \"react\";\n\nimport screens from \"../screens\";\n\nconst setClassName = (screenIndex, masterIndex) => {\n    if(screenIndex < masterIndex) return \"hiddenAbove\";\n    else if(screenIndex > masterIndex) return \"hiddenBelow\";\n    else return \"\";\n}\n\n// Shorthand. Forms array of screen comopnents and\n// sets props for each depending on masterIndex and\n// screenIndex \nconst setScreens = masterIndex => \n    screens.map(([, screen], screenIndex) => screen({\n        className: setClassName(screenIndex, masterIndex)\n    }));\n\nconst Master = ({match: {params: {id}}}) => {\n    const [props, setProps] = useState({});\n    const [body, setBody] = useState(null);\n\n    useEffect(() => {\n        (function() {\n            const masterIndex = id - 1;\n            let [props] = screens[masterIndex];\n\n            setProps(props);\n            setBody(setScreens(masterIndex));\n        }) ();\n    }, [id]);\n\n    // Figure out way of animating text off screen?\n\n    return body && <main className=\"master\" {...props}>\n        {body}\n    </main>;\n}\n\nexport default Master;","import React from 'react';\n\nimport {Switch, Redirect, Route} from \"react-router-dom\";\n\nimport \"./scss/main.scss\";\nimport Master from './components/Master';\n\nconst App = () => (\n  <Switch>\n    <Redirect exact from=\"/\" to=\"/screen/1\" />\n    <Route path=\"/screen/:id\" render={props => <Master {...props}/>}/> \n  </Switch>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}